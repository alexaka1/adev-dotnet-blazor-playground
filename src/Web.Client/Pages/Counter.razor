@page "/counter"
@using System.Diagnostics.CodeAnalysis
@using Shared
@rendermode InteractiveAuto

@inject IConfiguration Configuration
@inject ILogger<Counter> Logger
@inject IMyService MyService
@inject NavigationManager NavigationManager

<PageTitle>Counter</PageTitle>

<h1 class="mb-4 text-2xl font-bold">Counter</h1>
<h2 class="mb-4 text-xl font-bold">I am using @RendererInfo.Name rendering mode</h2>
<h2 class="mb-4 text-xl font-bold">
  SomeConfig value is:
  <span class="font-semibold italic">
    @Configuration["SomeConfig"]
  </span>
</h2>

<p role="status" class="mb-4 text-lg text-gray-700 data-[divisible-by-five='true']:bg-green-300"
   data-divisible-by-five="@ShowGreen().ToString().ToLowerInvariant()">Current count: @_currentCount</p>
@if (ShowGreen())
{
  Logger.LogInformation("Current count {Count} is divisible by {Dividend}, so it is green", _currentCount, 5);
  <p class="mb-4 text-pretty">Current count is divisible by 5, so it is green. This paragraph was created by Razor
    templating, but the
    color is set by Tailwind via a data- attribute.</p>
}
@{
  Logger.LogInformation("This is run on every render, just like React");
}

<button
  class="rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 "
  @onclick="IncrementCount">
  Click me
</button>

<button
  class="rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400"
  @onclick="ThrowException">
  Throw exception
</button>

<p>Data from API: <span class="font-semibold italic">@Data</span></p>


@code {
  private int _currentCount;
  private string? Data { get; set; } = "Loading...";

  protected override async Task OnInitializedAsync()
  {
    Logger.LogInformation("Hello from Counter.razor");
    Data = await MyService.GetData(CancellationToken.None);
  }

  private void IncrementCount()
  {
    _currentCount++;
    Logger.LogInformation("Current count is {Count}", _currentCount);
  }

  [DoesNotReturn]
  private static void ThrowException()
  {
    throw new InvalidOperationException("Oh no! Something went wrong!")
    {
      HelpLink = "https://github.com/alexaka1/adev-dotnet-blazor-playground/issues/new",
      Data =
      {
        { "UserId", 42 },
        { "UserName", "John Wick" },
      },
    };
  }

  private bool ShowGreen()
  {
    return _currentCount % 5 == 0;
  }

}
